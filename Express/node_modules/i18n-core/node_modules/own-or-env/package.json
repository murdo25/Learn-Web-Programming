{
  "_args": [
    [
      {
        "raw": "own-or-env@https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.0.tgz",
        "scope": null,
        "escapedName": "own-or-env",
        "name": "own-or-env",
        "rawSpec": "https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.0.tgz",
        "spec": "https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.0.tgz",
        "type": "remote"
      },
      "/var/www/html/learning/Express/node_modules/i18n-core"
    ]
  ],
  "_from": "own-or-env@https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.0.tgz",
  "_id": "own-or-env@1.0.0",
  "_inCache": true,
  "_location": "/i18n-core/own-or-env",
  "_phantomChildren": {},
  "_requested": {
    "raw": "own-or-env@https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.0.tgz",
    "scope": null,
    "escapedName": "own-or-env",
    "name": "own-or-env",
    "rawSpec": "https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.0.tgz",
    "spec": "https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/i18n-core",
    "/i18n-core/tap"
  ],
  "_resolved": "https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.0.tgz",
  "_shasum": "9ef920fc81e2e63cf59d41101258368cf4fca4fb",
  "_shrinkwrap": null,
  "_spec": "own-or-env@https://registry.npmjs.org/own-or-env/-/own-or-env-1.0.0.tgz",
  "_where": "/var/www/html/learning/Express/node_modules/i18n-core",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/isaacs/own-or-env/issues"
  },
  "dependencies": {},
  "description": "Use an objects own property, or an environment variable.  Optionally treat as a boolean if the env should be set to 1 or 0.",
  "devDependencies": {},
  "homepage": "https://github.com/isaacs/own-or-env#readme",
  "license": "ISC",
  "main": "own-or-env.js",
  "name": "own-or-env",
  "optionalDependencies": {},
  "readme": "# own-or-env\n\nUse an objects own property, or an environment variable.  Optionally\ntreat as a boolean if the env should be set to 1 or 0.\n\n## API\n\n`ownOrEnv(object, field, env, boolean)`\n\nUse the `object[field]` if it's an own property, otherwise use the\nnamed environent variable.  If `boolean` is set to `true`, then cast\nto a boolean flag.\n\n## USAGE\n\n```js\n// will set doTheThing to true based on config.doThing, falling back\n// to reading process.env.DO_THING, where '0' is treated as false.\nvar doTheThing = ownOrEnv(config, 'doThing', 'DO_THING', true)\n\n// just treat this one as a string, not a boolean flag\nvar file = ownOrEnv(config, 'file', 'MY_FILE')\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/own-or-env.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "1.0.0"
}
